{"version":3,"sources":["services/persons.js","Filter.js","PersonForm.js","Numbers.js","Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Filter","filter","handler","value","onChange","PersonForm","submitAction","nameInput","nameHandler","numberInput","numberHandler","onSubmit","type","PersonInfo","name","number","deleteHandler","onClick","Numbers","persons","map","person","toLowerCase","includes","key","Notification","message","style","color","fontSize","backgroundColor","borderRadius","padding","marginBottom","App","useState","setNewFilter","setPersons","newName","setNewName","newNumber","setNewNumber","notification","setNotification","useEffect","personService","initialPersons","event","target","preventDefault","newPerson","window","confirm","find","setTimeout","catch","error","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5cbf8b1a.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/api/persons'\r\n\r\nconst getAll = () =>{\r\n\tconst request = axios.get(baseUrl)\r\n\treturn request.then(response => response.data)\r\n}\r\n\r\nconst create = (newObject) =>{\r\n\tconst request = axios.post(baseUrl, newObject)\r\n\treturn request.then(response => response.data)\r\n}\r\n\r\nconst updateObject = (id, newObject) =>{\r\n\treturn axios.put(`${baseUrl}/${id}`, newObject)\r\n}\r\n\r\nconst deleteObject = (id) =>{\r\n\taxios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nexport default {getAll, create, updateObject, deleteObject}","import React from 'react'\r\n\r\nconst Filter = ({filter, handler}) => (<div> filter shown with <input value={filter} onChange={handler}/> </div>)\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = ({submitAction, nameInput, nameHandler, numberInput, numberHandler}) =>{\r\n  return(\r\n    <form onSubmit={submitAction}>\r\n        <h1>add a new...</h1>\r\n        <div>\r\n          name: <input value={nameInput} onChange={nameHandler}/>\r\n        </div>\r\n        <div>\r\n          number: <input value={numberInput} onChange={numberHandler}/>\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import React from 'react';\r\n\r\nconst PersonInfo = ({name, number, deleteHandler}) =>{\r\n  return(<div>{name} {number} <button onClick={deleteHandler}>delete</button></div>)\r\n}\r\n\r\nconst Numbers = ({filter, persons, deleteHandler}) => {\r\n  return(\r\n    <div>\r\n      <h2>Numbers</h2>\r\n      {persons.map(person =>{\r\n          if(person.name.toLowerCase().includes(filter.toLowerCase()) || person.number.includes(filter)){\r\n            return(<PersonInfo key={person.id} name={person.name} number={person.number} deleteHandler={() => deleteHandler(person.id)} />)\r\n          }\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Numbers","import React from 'react'\r\n\r\nconst Notification = ({message}) =>{\r\n\tconst style = {\r\n\t\tcolor: 'green',\r\n\t\tfontSize: 16,\r\n\t\tbackgroundColor: 'lightGray',\r\n\t\tborderRadius: 5,\r\n\t\tpadding: 10,\r\n\t\tmarginBottom: 15\r\n\t}\r\n\r\n\tif({message} === null){return null}\r\n\telse{return(<div style={style}>{message}</div>)}\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport personService from './services/persons.js'\r\nimport Filter from './Filter.js'\r\nimport PersonForm from './PersonForm.js'\r\nimport Numbers from './Numbers.js'\r\nimport Notification from './Notification.js'\r\n\r\nconst App = () => {\r\n  const [ filter, setNewFilter ] = useState('')\r\n  const [ persons, setPersons ] = useState([]) \r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ notification, setNotification ] = useState(null)\r\n\r\n  useEffect(() => {\r\n    personService\r\n    .getAll()\r\n    .then(initialPersons => setPersons(initialPersons))\r\n  }, [])\r\n\r\n  const handleNameChange = (event) =>{\r\n  \tsetNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = (event) =>{\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleFilterChange = (event) =>{\r\n    setNewFilter(event.target.value)\r\n  }\r\n\r\n  const addPerson = (event) => {\r\n  \tevent.preventDefault()\r\n  \tlet newPerson = {name: newName, number: newNumber}\r\n    const names = persons.map(person => person.name)\r\n    if(!names.includes(newPerson.name)){\r\n      personService\r\n      .create(newPerson)\r\n      .then(newPerson =>{\r\n        setPersons(persons.concat(newPerson))\r\n        setNewName('')\r\n        setNewNumber('')\r\n      })\r\n\r\n      setNotification('Person added to phonebook')\r\n      setTimeout(() =>{setNotification(null)}, 3000)\r\n    }\r\n  \telse{\r\n      if(window.confirm(`${newPerson.name} is in the phonebook. Update number?`)){\r\n        const id = persons.find(person => person.name === newPerson.name).id\r\n        personService\r\n        .updateObject(id, newPerson)\r\n        .then(() => {\r\n          setPersons(persons.map(person => person.name !== newPerson.name ? person : newPerson))\r\n          setNotification(`${newPerson.name}'s number has been updated`)\r\n          setTimeout(() =>{setNotification(null)}, 3000)\r\n        })\r\n        .catch(error =>{\r\n          setNotification(`${newPerson.name} is already deleted.`)\r\n          setTimeout(() =>{setNotification(null)}, 3000)\r\n        })\r\n\r\n        setNewName('')\r\n        setNewNumber('')\r\n      }\r\n    }\r\n\r\n    setNewName('')\r\n  }\r\n\r\n  const deleteButton = id =>{\r\n    if(window.confirm(\"Do you want to delete this person?\")){\r\n      personService.deleteObject(id)\r\n      setPersons(persons.filter(person => person.id !== id))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Notification message={notification}/>\r\n      <h2>Phonebook</h2>\r\n      <Filter value={filter} handler={handleFilterChange}/>\r\n      <PersonForm submitAction={addPerson} nameInput={newName} nameHandler={handleNameChange} numberInput={newNumber} numberHandler={handleNumberChange}/>\r\n      <Numbers filter={filter} persons={persons} deleteHandler={deleteButton}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}